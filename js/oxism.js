// Generated by CoffeeScript 1.6.3
(function() {
  var abs, activeContent, capitalize, computePositions, h, isTouchScreen, key, lastY, navHash, onMove, positions, sqrt, squares, testEl, val, vendor, w;

  abs = Math.abs, sqrt = Math.sqrt;

  isTouchScreen = 'ontouchstart' in window;

  lastY = w = h = 0;

  positions = [];

  vendor = {
    transform: 'transform'
  };

  squares = activeContent = null;

  testEl = document.createElement('div');

  capitalize = function(s) {
    return s[0].toUpperCase() + s.slice(1);
  };

  navHash = function() {
    var hash;
    hash = location.hash.slice(1);
    if (hash === '') {
      window.scrollTo(0, lastY);
      return document.body.className = '';
    }
    lastY = window.pageYOffset;
    if (activeContent) {
      activeContent.className = '';
    }
    activeContent = document.getElementById('content-' + hash);
    activeContent.className = 'active';
    return document.body.className = 'perma';
  };

  computePositions = function() {
    var square;
    return positions = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = squares.length; _i < _len; _i++) {
        square = squares[_i];
        _results.push([square.offsetLeft, square.offsetTop]);
      }
      return _results;
    })();
  };

  onMove = function(e) {
    var dX, dY, dist, i, rX, rY, square, _i, _len;
    for (i = _i = 0, _len = squares.length; _i < _len; i = ++_i) {
      square = squares[i];
      dX = e.pageX + window.pageXOffset - positions[i][0] - w / 2;
      dY = e.pageY + window.pageYOffset - positions[i][1] - h / 2;
      dist = sqrt(abs(dX) + abs(dY));
      rY = dX / (dist || 1) / 2;
      rX = -dY / (dist || 1) / 2;
      square.children[0].style[vendor.transform] = "rotateX(" + rX + "deg) rotateY(" + rY + "deg)";
    }
    return null;
  };

  for (key in vendor) {
    val = vendor[key];
    vendor[key] = (function() {
      var full, prefix, _i, _len, _ref;
      _ref = ['Webkit', 'Moz', 'ms'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        prefix = _ref[_i];
        if ((full = prefix + capitalize(val)) in testEl.style) {
          return full;
        }
      }
      if (val in testEl.style) {
        return val;
      }
      return null;
    })();
  }

  document.addEventListener('DOMContentLoaded', function() {
    window.addEventListener('hashchange', navHash);
    setTimeout((function() {
      return document.documentElement.className = '';
    }), 0);
    navHash();
    squares = document.getElementById('grid').children;
    w = h = parseInt(window.getComputedStyle(squares[0]).width, 10);
    document.getElementById('email').href = ['m', 'a', 'i', 'l', 't', 'o', ':', 'd', 'a', 'n', '@', 'o', 'x', 'i', 's', 'm', '.', 'c', 'o', 'm'].join('');
    if (!isTouchScreen) {
      document.addEventListener('keydown', function(e) {
        if (e.keyCode === 27) {
          return location.hash = '';
        }
      });
      if (!vendor.transform) {
        return;
      }
      computePositions();
      window.addEventListener('resize', computePositions);
      return document.addEventListener('mousemove', onMove, false);
    }
  }, false);

}).call(this);

/*
//@ sourceMappingURL=oxism.map
*/
